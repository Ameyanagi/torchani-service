apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: torchani-ingress
  namespace: torchani
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - torchani.ameyanagi.com
      secretName: torchani-tls
  rules:
    - host: torchani.ameyanagi.com
      http:
        paths:
          - path: /torchani/(.*)
            pathType: Prefix
            backend:
              service:
                name: torchani-api
                port:
                  number: 8000