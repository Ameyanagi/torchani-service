[project]
name = "torchani-service"
version = "0.1.0"
description = "GPU-optimized TorchANI service with memory management"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "torch>=2.1.0",
    "torchani>=2.2.0",
    "ase>=3.22.0",
    "rdkit>=2023.9.1",
    "numpy>=1.24.0",
    "prometheus-client>=0.19.0",
    "httpx>=0.25.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.9.0",
    "isort>=5.12.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "SIM", # flake8-simplify
]
ignore = ["E501", "B008"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=app --cov-report=term-missing"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.isort]
profile = "black"
line_length = 100